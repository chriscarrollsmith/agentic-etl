---
description: Setting up and authenticating the AWS CLI tool
globs: 
alwaysApply: false
---
# AWS CLI Setup Instructions

## Prerequisites: AWS Account Setup

Walk the user through AWS account setup if they don't already have one. (Or, if prompted to, use a browser tool to set up your own account.)

1. Create an AWS Account:
   - Go to [AWS Console](mdc:https:/aws.amazon.com)
   - Click "Create an AWS Account"
   - Follow the signup process (requires email, credit card)
   - Choose the "Basic Support - Free" tier

2. Set up AWS IAM Identity Center (formerly AWS SSO):
   - In AWS Console, search for "IAM Identity Center"
   - Click "Enable" if not already enabled
   - Choose "Create organization" if prompted
   - Set up your identity source (can use built-in AWS directory to start)
   - Create a permission set (e.g., "AdministratorAccess")
   - Add users and assign the permission set
   - Note the SSO start URL (will look like `https://d-xxxxxxxxxx.awsapps.com/start`)

3. Access the AWS Access Portal:
   - Go to your SSO start URL
   - Create your user credentials
   - You can now use these credentials for AWS CLI access

## Installation

1. Follow the official AWS CLI installation instructions for Linux x86 (64-bit) at:
   https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html

2. Verify installation:
   ```bash
   aws --version
   ```

## Configuration with AWS IAM Identity Center (SSO)

1. Configure SSO:
   ```bash
   aws configure sso
   ```

2. When prompted, enter:
   - SSO start URL: `https://d-xxxxxxxxxx.awsapps.com/start`
   - SSO Region: `us-east-1`
   - Default CLI profile name: (press Enter for default, or choose a name)

3 The command will open your browser for authentication. Log in through your organization's portal.

4. After successful authentication, note the profile name from the configuration output (e.g., `AdministratorAccess-xxxxxxxxxxxx`)

## Setting Up Default Profile

To avoid having to specify `--profile` with every command:

1. Add the AWS_PROFILE environment variable to your `.bashrc`:
   ```bash
   echo 'export AWS_PROFILE=AdministratorAccess-xxxxxxxxxxxx' >> ~/.bashrc
   ```

2. Reload your `.bashrc`:
   ```bash
   source ~/.bashrc
   ```

## Verify Setup

Test that everything is working:
```bash
aws s3 ls
```

This should list all S3 buckets you have access to without any authentication errors.